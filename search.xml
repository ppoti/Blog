<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Git常用命令与配置</title>
      <link href="/Blog/2018/04/25/git/"/>
      <url>/Blog/2018/04/25/git/</url>
      <content type="html"><![CDATA[<p>一，配置私钥</p><pre><code>git config --global user.name &quot;user&quot;    //设置名字git config --global user.email &quot;user@qq.com&quot;  //设置邮箱  ssh-keygen -t rsa -C  //三次回车即可生成 ssh keyssh-keygen  //不同平台可以使用这个 ssh keycat ~/.ssh/id_rsa.pub  //查看你的 public key</code></pre><hr><p>二，在gitee，coding，github添加你的key和ssh</p><ul><li>添加方法大同小异 个人 -&gt; 设置 -&gt; SSH 公钥 输入标题，以及public key，确认即可。</li></ul><hr><p>三，git和gitee项目关联</p><p>  提交仓库</p><pre><code>git add . //提交所有 git add &apos;&apos;  //提交单个git commit -m &quot;first&quot;  //提交时候设置的版本号git push //提交 git push origin mastergit remote add origin +&quot;仓库地址&quot;git remote -v //查询权限git push --force origin master //替换当前</code></pre><p>  提取仓库</p><pre><code>git clone //第一次拉取代码git pull // 拉取代码 git fetch --all //下载远程的库git reset --hard origin/master //强制与master覆盖</code></pre><p>  分支</p><pre><code>git branch &apos;&apos;    //新建分支git checkout &apos;&apos;  //切换分支git pull    //拉取分支到本地开发git branch   //查看当前分支git branch -D &apos;&apos; //删除分支git add . &amp;&amp; git commit -m &apos;cont&apos; &amp;&amp; git push  //切换到分支,再提交内容，git checkout master &amp;&amp; git merge origin/分支名 &amp;&amp; git push 切换到主分支,再合并分支</code></pre>]]></content>
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo静态资源博客搭建</title>
      <link href="/Blog/2018/04/25/hexo/"/>
      <url>/Blog/2018/04/25/hexo/</url>
      <content type="html"><![CDATA[<p>一，hexo install 安装<br>    安装好Git Nodejs<br>    通过git 安装hexo及常用命令</p><pre><code>npm install hexo -g  //安装Hexohexo -v  //检查hexo是否安装成功hexo init &apos;blog&apos;//初始化该文件夹 cd blognpm install //安装所需要的组件hexo server //开启服务器 简写hexo shexo generate  //生成静态网页 简写hexo ghexo deploy //开始部署coding、github  简写hexo dhexo s --debug //调试模式hexo new title //创建一篇新文章hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy //一键清除，生成，部署</code></pre><hr><p>二，部署配置</p><pre><code>deploy: //键值 : 后面带空格  type: git  repo:     github: git@github.com:xxx/Blog.git,master    coding: git@git.coding.net:xxx/Blog.git,master </code></pre><hr><p>三，线上加载错乱的路径设置<br>github路径是<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:xxx/Blog.git<br>在根目录设置root: /Blog/<br>一级域名，则不用</p><p>至于主题，个人喜欢折腾个自己喜欢的，next也不错，功能丰富，就是UI不够细致</p><pre><code>npm install hexo -g  //安装Hexohexo -v  //检查hexo是否安装成功hexo init &apos;blog&apos;//初始化该文件夹 cd blognpm install //安装所需要的组件hexo server //开启服务器 简写hexo shexo generate  //生成静态网页 简写hexo ghexo deploy //开始部署coding、github  简写hexo dhexo s --debug //调试模式hexo new title //创建一篇新文章hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy //一键清除，生成，部署</code></pre><hr><p>二，部署配置</p><pre><code>deploy: //键值 : 后面带空格  type: git  repo:     github: git@github.com:xxx/Blog.git,master    coding: git@git.coding.net:xxx/Blog.git,master </code></pre><hr><p>三，线上加载错乱的路径设置<br>github路径是<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:xxx/Blog.git<br>在根目录设置root: /Blog/<br>一级域名，则不用</p><p>至于主题，个人喜欢折腾个自己喜欢的，next也不错，功能丰富，就是UI不够细致</p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
